@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Ventas";
}

<style>

</style>

<script>
   document.addEventListener("DOMContentLoaded", () => { 
        const urlVenta = "@Url.Action("VenderList", "Venta")";
        const urlProductos = "@Url.Action("ProductoList", "Venta")";


              //Listando Productos
        const contenedorProductos = document.getElementById("ContenedorProductos");
        const listarProductos = (dataProductos) => {
            console.log("Productos recibidos:", dataProductos); // Log de productos recibidos
            contenedorProductos.innerHTML = ''; // Limpiar el contenedor antes de agregar nuevas opciones
            const data = dataProductos.value

            data.forEach(data => {
                   
            });

            data.forEach(producto => {
                const option = document.createElement('option');
                option.value = producto.productoId;//sintax error // Suponiendo que el objeto producto tiene una propiedad id
                option.text = producto.nombre;//sintax error // Suponiendo que el objeto producto tiene una propiedad nombre
                contenedorProductos.appendChild(option);
            });
        };

    

    //Listando Ventas
        const contenedorVentas = document.getElementById("ContenedorVentas");
       const listarVentas = (data) => {
           console.log("Ventas recibidas:", data); // Log de ventas recibidas
           contenedorVentas.innerHTML = ''; // Limpiar el contenedor antes de agregar nuevas ventas
           data.forEach(element => {
               const row = document.createElement("tr");

               const VentaId = document.createElement("td");
               VentaId.textContent = element.ventaId;//sintx

               const fecha = document.createElement("td");
                fecha.textContent = element.fecha;//sintx

               const producto = document.createElement("td");
                producto.textContent = element.productoId;//sintx

               const cantidad = document.createElement("td");
                cantidad.textContent = element.cantidad;//sintx

               row.appendChild(VentaId);
               row.appendChild(fecha);
               row.appendChild(producto);
               row.appendChild(cantidad);

               contenedorVentas.appendChild(row);
           });

       };
            // Fetch para obtener lista de ventas
        fetch(urlVenta)
            .then(listaVenta => listaVenta.json())
            .then(data => {
                listarVentas(data);
            })
            .catch(error => {
                console.log("Error, no llegan datos de Ventas", error);
            });

        // Fetch para obtener lista de productos
        fetch(urlProductos)
            .then(listaProductos => listaProductos.json())
            .then(data => {
                listarProductos(data);
            })
            .catch(error => {
                console.log("Error, no llegan datos de Productos", error);
            });


        //Funcion para Vender
        const btnParaComprar = document.getElementById("btnVender")
        btnParaComprar.addEventListener("click", (event) => {
            event.preventDefault();
            const urlParaVender = "@Url.Action("Vender", "Venta")";//nombre de url
            const selectElement = document.querySelector('.form-select');
            const idProducto = selectElement.value;


            const cantidad = document.getElementById("cantidad").value;

            if (!idProducto || !cantidad) {
                alert("Por favor, completa todos los campos.");
                return;
            }
            //condicion fecha


            // const hoy = new Date();
            // const dia = String(hoy.getDate()).padStart(2, '0');
            // const mes = String(hoy.getMonth() + 1).padStart(2, '0'); // Los meses comienzan desde 0
            // const año = hoy.getFullYear();
            // const fecha = `${dia}/${mes}/${año}`;

            const data = {
                idProducto: idProducto,
                cantidad: cantidad
            };


            fetch(urlParaVender, {// estaba mal escrito -> urlParaVenta
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        console.log("Venta realizada:", result.message);
                        alert("Venta realizada exitosamente.");
                    } else {
                        console.error("Error en la Venta:", result.message);
                        alert("Error: " + result.message);
                    }

                })
                .catch(error => {
                    console.error("Error al realizar la Venta:", error);
                    alert("Error al realizar la venta. Inténtalo de nuevo más tarde.");
                });


            listarVentas();
        });

   });
</script>

<div class="text-center">
    <h1>Gestión de ventas</h1>


    <select class="form-select" aria-label="Default select example" id="ContenedorProductos">
        <div class="mb-3">
            <label for="fecha" class="form-label">Productos</label>
        </div>
        <option selected>abrir el menú de selección </option>

    </select>
    <form>
        
        <div class="mb-3">
            <label for="cantidad" class="form-label">cantidad</label>
            <input type="number" class="form-control" id="cantidad">
        </div>
        <button type="submit" class="btn btn-primary" id="btnVender">Vender</button>
    </form>

    <h2> Lista de compras del usuario </h2>
    <div class="text-center">
        <table class="table">
            <thead>
                <tr>
                    <th>VentaId</th>
                    <th>Fecha</th>
                    <th>Producto</th>
                    <th>Cantidad</th>
                </tr>
            </thead>
            <tbody id="ContenedorVentas">
                
            </tbody>

        </table>

    </div>


</div>



@*
        public int VentaId { get; set; }

        public DateTime Fecha { get; set; }
        [ForeignKey("Producto")]
        public int ProductoId { get; set; }

        public int Cantidad { get; set; }
        [ForeignKey("Usuarios")]
        public int UsuarioId { get; set; }
        *@